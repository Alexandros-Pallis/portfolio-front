# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: default

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        displayName: Build docker image
        steps:
        - task: Docker@2
          displayName: Build docker image
          inputs:
            containerRegistry: 'dockerhub'
            repository: 'apallis/portfolio-front'
            command: 'build'
            Dockerfile: '**/prod.Dockerfile'
            tags: 'latest'
            arguments: '--build-arg artifacts_folder=src'

        - task: Docker@2
          displayName: Push image to dockerhub
          inputs:
            containerRegistry: 'dockerhub'
            repository: 'apallis/portfolio-front'
            command: 'push'
            tags: 'latest'

  - stage: Deploy
    dependsOn: Build
    variables:
      - group: portfolio-front
    displayName: Deploy to production
    jobs:
      - job: Deploy
        steps:
        - task: DockerCompose@0
          displayName: Stop and remove container
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'dockerhub'
            dockerComposeFile: '**/prod.docker-compose.yml'
            projectName: 'portfolio'
            action: 'Run a Docker Compose command'
            dockerComposeCommand: 'down'

        - task: DockerCompose@0
          displayName: Create and start container
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'dockerhub'
            dockerComposeFile: '**/prod.docker-compose.yml'
            dockerComposeFileArgs: |
              GIN_MODE=$(GIN_MODE)
            projectName: 'portfolio'
            action: 'Run a Docker Compose command'
            dockerComposeCommand: 'up -d'
